# MariaDB configuration
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://3.36.55.195:3306/meet
spring.datasource.username=root
spring.datasource.password=ssafyb303

# 서버 구동시 DB 테이블 생성할지 안할지
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# 서버 포트 설정
#server.port = 8000
server.port=8443
server.http.port=8000
server.ssl.enabled=true

#The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12

#The path to the keystore containing the certificate
server.ssl.key-store-type=classpath:keystore/ssafy.p12
#The password used to generate the certificate
server.ssl.key-store-password=ssafyb303!
#The alias mapped to the certificate
server.ssl.key-alias=ssafy
#truse store location
trust.store=classpath:keystore/ssafy.p12
#true store password
trust.store.password=ssafyb303!

# 인코딩 설정
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
# HTTP Request, Response에 모두 인코딩 강제
server.servlet.encoding.force=true

# 서버 구동시 출력되는 로깅의 LEVEL 설정
logging.level.org.springframework=DEBUG
logging.level.org.springframework.web=DEBUG

# devtools
spring.devtools.livereload.enabled=true
spring.freemarker.cache=false

# JWT 관련 설정을 추가한다.
# HS512 알고리즘을 사용하여 header, payload, Signature를 암호화한다. 이 때 HS512 알고리즘은 64 byte 이상의 암호화 키를 사용해야 한다.
# 아래의 secret 값은 특정문자열을 Base64로 인코딩한 값을 사용했다.
jwt.header=Authorization
jwt.secret=J3NzYWZ5LXNlY29uZC1zZW1hc3Rlci1maW5hbC1wcm9qZWN0LW1va2tvemktYXItbWVldC1naXJsLWFuZC1ib3ktc3ByaW5nLXNlY3VyaXR5LWp3dC10dXRvcmlhbC1zZWNyZXQn
# 10 * 24 * 60 * 60 * 1000 = 10일이다.
jwt.token-validity-in-seconds=864000000
